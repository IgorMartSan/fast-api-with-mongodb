services:


######################### api #########################
 
  # api:
  #   container_name: api
  #   restart: always
  #   build:
  #     context: ./app
  #     dockerfile: dockerfile
  #   #volumes:  
  #     #- ${PATH_LOG}:/system_log
  #     #- ${PATH_DATA}:/system_data
  #   ports:
  #     #- ${API_PROMETHEUS_PORT}:50001
  #     - 8010:8010
  #   #depends_on:
  #     #- mariadb
  #   environment:
  #       CONTAINER_NAME: api_model
  #   networks:
  #     - my_network


######################### Redis #########################
#   redis:
#     container_name: redis
#     image: redis:latest
#     restart: always
#     ports:
#       - 50030:6379
#     command: redis-server --maxmemory 50GB --maxmemory-policy allkeys-lru --save "" --appendonly no #--requirepass sua_senha_aqui
#     networks:
#       - my_network
    
#   redis_insight:
#     image: redislabs/redisinsight:latest
#     container_name: redis_insight
#     restart: always
#     ports:
#       - 50031:5540
# #    volumes:
# #      - ${PATH_REDIS_INSIGHT}:/db
#     networks:
#       - my_network

######################### Mongo #########################

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: test
    ports:
      - 27017:27017


  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH: false

######################### Prometheus #########################

#   prometheus:
#     image: prom/prometheus:latest
#     volumes:
#       - ./prometheus.yml:/etc/prometheus/prometheus.yml
#     ports:
#       - 50034:9090
#     restart: always
#     networks:
#       - my_network

#   ## Comando para acabar com o erro de permicao
#   ## sudo chown -R 472:472 ./grafana_data 
#   grafana:
#     image: grafana/grafana:latest
#     volumes:
#       -  ${PATH_GRAFANA}:/var/lib/grafana  # Bind mount for Grafana data persistence
#     ports:
#       - 50035:3000
#     restart: always
#     depends_on:
#       - prometheus
#     networks:
#       - my_network

networks:
  my_network:
    driver: bridge
    name: my_network




